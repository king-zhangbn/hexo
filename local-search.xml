<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>为 Hexo 添加番剧页面，支持哔哩哔哩和 Bangumi 源。</title>
    <link href="/2022/02/14/%E4%B8%BA-Hexo-%E6%B7%BB%E5%8A%A0%E7%95%AA%E5%89%A7%E9%A1%B5%E9%9D%A2%EF%BC%8C%E6%94%AF%E6%8C%81%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E5%92%8C-Bangumi-%E6%BA%90%E3%80%82/"/>
    <url>/2022/02/14/%E4%B8%BA-Hexo-%E6%B7%BB%E5%8A%A0%E7%95%AA%E5%89%A7%E9%A1%B5%E9%9D%A2%EF%BC%8C%E6%94%AF%E6%8C%81%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E5%92%8C-Bangumi-%E6%BA%90%E3%80%82/</url>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><strong>为 Hexo 添加<a href="https://www.bilibili.com/">哔哩哔哩</a>&#x2F;<a href="https://bangumi.tv/">Bangumi</a>追番&#x2F;追剧页面，参考自<a href="https://github.com/mythsman/hexo-douban">hexo-douban</a></strong>.</p><p><a href="https://demo.hclonely.com/bangumis/">Demo</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$ </span><span class="language-bash">npm install hexo-bilibili-bangumi --save</span><br></code></pre></td></tr></table></figure><hr><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>将下面的配置写入站点的配置文件 <code>_config.yml</code> 里(不是主题的配置文件).</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">bangumi:</span> <span class="hljs-comment"># 追番设置</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">source:</span> <span class="hljs-string">bili</span><br>  <span class="hljs-attr">path:</span><br>  <span class="hljs-attr">vmid:</span><br>  <span class="hljs-attr">title:</span> <span class="hljs-string">&#x27;追番列表&#x27;</span><br>  <span class="hljs-attr">quote:</span> <span class="hljs-string">&#x27;生命不息，追番不止！&#x27;</span><br>  <span class="hljs-attr">show:</span> <span class="hljs-number">1</span><br>  <span class="hljs-attr">lazyload:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">loading:</span><br>  <span class="hljs-attr">metaColor:</span><br>  <span class="hljs-attr">color:</span><br>  <span class="hljs-attr">webp:</span><br>  <span class="hljs-attr">progress:</span><br>  <span class="hljs-attr">proxy:</span><br>    <span class="hljs-attr">host:</span> <span class="hljs-string">&#x27;代理host&#x27;</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-string">&#x27;代理端口&#x27;</span><br>  <span class="hljs-attr">extra_options:</span><br>    <span class="hljs-attr">key:</span> <span class="hljs-string">value</span><br><span class="hljs-attr">cinema:</span> <span class="hljs-comment"># 追剧设置</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">path:</span><br>  <span class="hljs-attr">vmid:</span><br>  <span class="hljs-attr">title:</span> <span class="hljs-string">&#x27;追剧列表&#x27;</span><br>  <span class="hljs-attr">quote:</span> <span class="hljs-string">&#x27;生命不息，追剧不止！&#x27;</span><br>  <span class="hljs-attr">show:</span> <span class="hljs-number">1</span><br>  <span class="hljs-attr">lazyload:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">loading:</span><br>  <span class="hljs-attr">metaColor:</span><br>  <span class="hljs-attr">color:</span><br>  <span class="hljs-attr">webp:</span><br>  <span class="hljs-attr">progress:</span><br>  <span class="hljs-attr">extra_options:</span><br>    <span class="hljs-attr">key:</span> <span class="hljs-string">value</span><br></code></pre></td></tr></table></figure><ul><li><strong>enable</strong>: 是否启用</li><li><strong>source</strong>: 数据源，仅支持追番，追剧仅支持哔哩哔哩源。<code>bili</code>: <a href="https://www.bilibili.com/">哔哩哔哩源</a>, <code>bgm</code>: <a href="https://bangumi.tv/">Bangumi源</a></li><li><strong>proxy</strong>: 代理设置，仅在使用支持<code>bgm</code>源追番时生效。默认<code>false</code></li><li><strong>path</strong>: 页面路径，默认<code>bangumis/index.html</code>, <code>cinemas/index.html</code></li><li><strong>vmid</strong>: 哔哩哔哩的 <code>vmid(uid)</code><a href="#%E8%8E%B7%E5%8F%96-bilibili-uid">如何获取？</a>或Bangumi的用户<code>id</code><a href="#%E8%8E%B7%E5%8F%96-bangumi-id">如何获取？</a></li><li><strong>title</strong>: 该页面的标题</li><li><strong>quote</strong>: 写在页面开头的一段话，支持 html 语法，可留空。</li><li><strong>show</strong>: 初始显示页面：<code>0: 想看</code>, <code>1: 在看</code>, <code>2: 看过</code>，默认为<code>1</code></li><li><strong>lazyload</strong>: 是否启用图片懒加载，如果与主题的懒加载冲突请关闭，默认<code>true</code></li><li><strong>loading</strong>: 图片加载完成前的 loading 图片，需启用图片懒加载</li><li><strong>metaColor</strong>: meta 部分(简介上方)字体颜色</li><li><strong>color</strong>: 简介字体颜色</li><li><strong>webp</strong>: 番剧封面使用<code>webp</code>格式(此格式在<code>safari</code>浏览器下不显示，但是图片大小可以缩小 100 倍左右，仅支持哔哩哔哩源), 默认<code>true</code></li><li><strong>progress</strong>: 获取番剧数据时是否显示进度条，默认<code>true</code></li><li><strong>extra_options</strong>: 此配置会扩展到Hexo<code>page</code>变量中</li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol><li>在<code>hexo generate</code>或<code>hexo deploy</code>之前使用<code>hexo bangumi -u</code>命令更新追番数据，使用<code>hexo cinema -u</code>命令更新追剧数据！</li><li>删除数据命令:<code>hexo bangumi -d</code>&#x2F;<code>hexo cinema -d</code></li></ol><h2 id="获取-Bilibili-uid"><a href="#获取-Bilibili-uid" class="headerlink" title="获取 Bilibili uid"></a>获取 Bilibili uid</h2><p>登录哔哩哔哩后前往<a href="https://space.bilibili.com/">https://space.bilibili.com/</a>页面，网址最后的一串数字就是 <code>uid</code></p><p><em><strong>需要将追番列表设置为公开！</strong></em></p><h2 id="获取-Bangumi-id"><a href="#获取-Bangumi-id" class="headerlink" title="获取 Bangumi id"></a>获取 Bangumi id</h2><p>登录<a href="https://bangumi.tv/">Bangumi</a>后打开控制台(<code>Ctrl</code>+<code>Shift</code>+<code>J</code>)，输入<code>CHOBITS_UID</code>回车，下面会输出<code>id</code></p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p><a href="https://github.com/HCLonely/hexo-bilibili-bangumi/raw/master/example.png"><img src="https://github.com/HCLonely/hexo-bilibili-bangumi/raw/master/example.png"></a></p><h2 id="手动添加番剧-x2F-追剧数据"><a href="#手动添加番剧-x2F-追剧数据" class="headerlink" title="手动添加番剧&#x2F;追剧数据"></a>手动添加番剧&#x2F;追剧数据</h2><p>因为某些番剧在哔哩哔哩上没有，但是又想在hexo中展示，怎么办呢？现在支持手动添加番剧数据了！</p><p>在 <code>sources/_data/</code> 目录下新建文件，命名为 <code>extra_bangumis.json</code>(追番数据)或<code>extra_cinemas.json</code>(追剧数据) ，并添加以如下内容:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;watchedExtra&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;title&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;缘之空&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;番剧&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;area&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;日本&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;cover&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/mmdjiji/bangumis@main/Yosuga-no-Sora/cover.jpg&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;totalCount&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;全12话&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;follow&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;不可用&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;view&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;不可用&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;danmaku&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;不可用&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;coin&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;不可用&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;score&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;不可用&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;des&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;远离都市的田园小镇，奥木染。春日野悠带着妹妹穹，来到了这座城镇。坐落在这里的是，儿时暑假经常造访的充满回忆的已故祖父的家。双亲因意外事故而丧生，变得无依无靠...&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><code>title</code> 是番剧的标题，<code>cover</code> 是封面图链接， <code>des</code> 是简介，上述字段均根据需要修改。</p><p>另外除了 <code>watchedExtra</code> 数组，还可以在后面添加新的数组，可用数组名如下:</p><table><thead><tr><th>可用数组名</th><th>含义</th></tr></thead><tbody><tr><td>wantWatchExtra</td><td>想看</td></tr><tr><td>watchingExtra</td><td>在看</td></tr><tr><td>watchedExtra</td><td>看过</td></tr></tbody></table><p>需要注意，在两个数组之间需要用 <code>,</code> 分隔。</p><h2 id="Lisense"><a href="#Lisense" class="headerlink" title="Lisense"></a>Lisense</h2><p><a href="https://github.com/HCLonely/hexo-bilibili-bangumi/blob/master/LICENSE">Apache Licence 2.0</a></p>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HEXO-插件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo 内容辅助插件</title>
    <link href="/2022/02/14/Hexo%20%E5%86%85%E5%AE%B9%E8%BE%85%E5%8A%A9%E6%8F%92%E4%BB%B6/"/>
    <url>/2022/02/14/Hexo%20%E5%86%85%E5%AE%B9%E8%BE%85%E5%8A%A9%E6%8F%92%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Hexo 内容辅助插件，支持将类似 <a href="https://docutils.sourceforge.io/docs/ref/rst/directives.html">reStructuredText</a> 的警告提示块添加到 Markdown 文档中。例如 note、warning、error 等提示块，效果如图：</p><p><a href="https://camo.githubusercontent.com/790b3d419c13ceb9ca8dfb5e241a9b0edc45cc56dc9fa36a713908ab34268791/68747470733a2f2f7069632e6c69786c2e636e2f323032302f696d6167652d32303230303431393233303833383832332e706e67"><img src="https://gitee.com/starfall-dust/tuchuang/raw/master/img4/202202141740256.png"></a></p><p>开发这个插件的动机，是想让 <a href="https://hexo.io/">hexo</a> 与 <a href="https://squidfunk.github.io/mkdocs-material/extensions/admonition/">Material for MkDocs</a> 的提示信息兼容，让系列文章在基于 MkDocs 搭建的子站中有更好的阅读体验。</p><p>查看更多内容，请访问博文：<a href="https://www.lixl.cn/2020/041837756.html">Hexo-admonition 插件安装使用指南</a>。</p><h2 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h2><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">npm install hexo-admonition --save<br></code></pre></td></tr></table></figure><h2 id="使用指南"><a href="#使用指南" class="headerlink" title="使用指南"></a>使用指南</h2><h3 id="语法说明"><a href="#语法说明" class="headerlink" title="语法说明"></a>语法说明</h3><p>Hexo-admonition 遵循一种简单的语法：每个块都以 <code>!!!</code> 开头，然后是代表提示类型的关键字（<code>type</code>）及标题（<code>title</code>）。例如:</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">!!! note Hexo-admonition 插件使用示例<br>    这是基于 hexo-admonition 插件渲染的一条提示信息。类型为 note，并设置了自定义标题。<br><br>    提示内容开头留 <span class="hljs-number">4</span> 个空格，可以有多行，最后用空行结束此标记。<br><br><br></code></pre></td></tr></table></figure><p>在 Hexo 渲染前，将被转换成如下内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;admonition note &quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;admonition-title&quot;</span>&gt;</span>Hexo-admonition 插件使用示例<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是基于 hexo-admonition 插件渲染的一条提示信息。类型为 note，并设置了自定义标题。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>提示内容开头留 4 个空格，可以有多行，最后用空行结束此标记。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>最终呈现效果如下：</p><p><a href="https://camo.githubusercontent.com/7f2954d3b3e18ecc33a637a20695c7586f87250f331d01b72bd82ca85412583c/68747470733a2f2f7069632e6c69786c2e636e2f323032302f696d6167652d32303230303432303132303234353333392e706e67"><img src="https://gitee.com/starfall-dust/tuchuang/raw/master/img4/202202141740509.png"></a></p><h3 id="支持的类型"><a href="#支持的类型" class="headerlink" title="支持的类型"></a>支持的类型</h3><p>提示类型 <code>type</code> 将用作 CSS 类名称，暂支持如下类型：</p><ul><li><code>note</code></li><li><code>info, todo</code></li><li><code>warning, attention, caution</code></li><li><code>error, failure, missing, fail</code></li></ul><h3 id="设置-x2F-隐藏标题"><a href="#设置-x2F-隐藏标题" class="headerlink" title="设置&#x2F;隐藏标题"></a>设置&#x2F;隐藏标题</h3><p>标题 <code>title</code> 是可选的，当未设置时，将以 <code>type</code> 作为默认值:</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">!!! warning<br>    这是一条采用默认标题的警告信息。<br><br></code></pre></td></tr></table></figure><p>效果如下：</p><p><a href="https://camo.githubusercontent.com/59c52a8d353c6bea5245ad1b205951b99119f769ca2a7ea2bc01a0fa1364d38c/68747470733a2f2f7069632e6c69786c2e636e2f323032302f696d6167652d32303230303431393233323133373837352e706e67"><img src="https://gitee.com/starfall-dust/tuchuang/raw/master/img4/202202141740600.png"></a></p><p>如果不想显示标题，可以将 <code>title</code> 设置为 <code>&quot;&quot;</code>：</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">!!! Warning <span class="hljs-string">&quot;&quot;</span><br>    这是一条不带标题的警告信息。<br><br></code></pre></td></tr></table></figure><p>效果如下：</p><p><a href="https://camo.githubusercontent.com/d7b98a268fb1c133c6f158e296a305a7ac5f3f0ba4e55003d4b02a3170a11754/68747470733a2f2f7069632e6c69786c2e636e2f323032302f696d6167652d32303230303431393233323333373933372e706e67"><img src="https://gitee.com/starfall-dust/tuchuang/raw/master/img4/202202141740477.png"></a></p><h3 id="嵌套-markdown-标记"><a href="#嵌套-markdown-标记" class="headerlink" title="嵌套 markdown 标记"></a>嵌套 markdown 标记</h3><p>在 <code>hexo-admonition</code> 内部，还可以嵌套标准 Markdown 标签，例如：</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">!!! note <span class="hljs-string">&quot;嵌套链接及引用块&quot;</span><br>    欢迎访问我的博客链接：[悟尘纪](https://www.lixl.cn)<br><br>    &gt;这里嵌套一行引用信息。<br><br></code></pre></td></tr></table></figure><p>效果如下:</p><p><a href="https://camo.githubusercontent.com/8222d37755cc03ee28fbc82fcbb38d0f66bdddc183c7018583c454ef5651f57f/68747470733a2f2f7069632e6c69786c2e636e2f323032302f696d6167652d32303230303431393233323533393533362e706e67"><img src="https://camo.githubusercontent.com/8222d37755cc03ee28fbc82fcbb38d0f66bdddc183c7018583c454ef5651f57f/68747470733a2f2f7069632e6c69786c2e636e2f323032302f696d6167652d32303230303431393233323533393533362e706e67"></a></p><h3 id="样式配置"><a href="#样式配置" class="headerlink" title="样式配置"></a>样式配置</h3><p>将如下样式放入 hexo 主题的自定义样式文件中（如：<code>my.css</code>），并按自己喜好修改：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.admonition</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">1.5625em</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">padding</span>: .<span class="hljs-number">6rem</span>;<br>  <span class="hljs-attribute">overflow</span>: hidden;<br>  <span class="hljs-attribute">font-size</span>: .<span class="hljs-number">64rem</span>;<br>  <span class="hljs-attribute">page-break-inside</span>: avoid;<br>  <span class="hljs-attribute">border-left</span>: .<span class="hljs-number">3rem</span> solid <span class="hljs-number">#42b983</span>;<br>  <span class="hljs-attribute">border-radius</span>: .<span class="hljs-number">3rem</span>;<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0.1rem</span> <span class="hljs-number">0.4rem</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,.<span class="hljs-number">05</span>), <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0.05rem</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,.<span class="hljs-number">1</span>);<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#fafafa</span>;<br>&#125;<br><br><span class="hljs-selector-tag">p</span><span class="hljs-selector-class">.admonition-title</span> &#123;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">margin</span>: -.<span class="hljs-number">6rem</span> -.<span class="hljs-number">6rem</span> .<span class="hljs-number">8em</span> -.<span class="hljs-number">6rem</span> <span class="hljs-meta">!important</span>;<br>  <span class="hljs-attribute">padding</span>: .<span class="hljs-number">4rem</span> .<span class="hljs-number">6rem</span> .<span class="hljs-number">4rem</span> <span class="hljs-number">2.5rem</span>;<br>  <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">700</span>;<br>  <span class="hljs-attribute">background-color</span>:<span class="hljs-built_in">rgba</span>(<span class="hljs-number">66</span>, <span class="hljs-number">185</span>, <span class="hljs-number">131</span>, .<span class="hljs-number">1</span>);<br>&#125;<br><br><span class="hljs-selector-class">.admonition-title</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">top</span>: .<span class="hljs-number">9rem</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">1rem</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">12px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">12px</span>;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#42b983</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27; &#x27;</span>;<br>&#125;<br><br><span class="hljs-selector-class">.info</span>&gt;<span class="hljs-selector-class">.admonition-title</span>, <span class="hljs-selector-class">.todo</span>&gt;<span class="hljs-selector-class">.admonition-title</span> &#123;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">184</span>,<span class="hljs-number">212</span>,.<span class="hljs-number">1</span>);<br>&#125;<br><br><span class="hljs-selector-class">.warning</span>&gt;<span class="hljs-selector-class">.admonition-title</span>, <span class="hljs-selector-class">.attention</span>&gt;<span class="hljs-selector-class">.admonition-title</span>, <span class="hljs-selector-class">.caution</span>&gt;<span class="hljs-selector-class">.admonition-title</span> &#123;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>,<span class="hljs-number">145</span>,<span class="hljs-number">0</span>,.<span class="hljs-number">1</span>);<br>&#125;<br><br><span class="hljs-selector-class">.failure</span>&gt;<span class="hljs-selector-class">.admonition-title</span>, <span class="hljs-selector-class">.missing</span>&gt;<span class="hljs-selector-class">.admonition-title</span>, <span class="hljs-selector-class">.fail</span>&gt;<span class="hljs-selector-class">.admonition-title</span>, <span class="hljs-selector-class">.error</span>&gt;<span class="hljs-selector-class">.admonition-title</span> &#123;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>,<span class="hljs-number">82</span>,<span class="hljs-number">82</span>,.<span class="hljs-number">1</span>);<br>&#125;<br><br><span class="hljs-selector-class">.admonition</span><span class="hljs-selector-class">.info</span>, <span class="hljs-selector-class">.admonition</span><span class="hljs-selector-class">.todo</span> &#123;<br>  <span class="hljs-attribute">border-color</span>: <span class="hljs-number">#00b8d4</span>;<br>&#125;<br><br><span class="hljs-selector-class">.admonition</span><span class="hljs-selector-class">.warning</span>, <span class="hljs-selector-class">.admonition</span><span class="hljs-selector-class">.attention</span>, <span class="hljs-selector-class">.admonition</span><span class="hljs-selector-class">.caution</span> &#123;<br>  <span class="hljs-attribute">border-color</span>: <span class="hljs-number">#ff9100</span>;<br>&#125;<br><br><span class="hljs-selector-class">.admonition</span><span class="hljs-selector-class">.failure</span>, <span class="hljs-selector-class">.admonition</span><span class="hljs-selector-class">.missing</span>, <span class="hljs-selector-class">.admonition</span><span class="hljs-selector-class">.fail</span>, <span class="hljs-selector-class">.admonition</span><span class="hljs-selector-class">.error</span> &#123;<br>  <span class="hljs-attribute">border-color</span>: <span class="hljs-number">#ff5252</span>;<br>&#125;<br><br><span class="hljs-selector-class">.info</span>&gt;<span class="hljs-selector-class">.admonition-title</span><span class="hljs-selector-pseudo">::before</span>, <span class="hljs-selector-class">.todo</span>&gt;<span class="hljs-selector-class">.admonition-title</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#00b8d4</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;<br>&#125;<br><br><span class="hljs-selector-class">.warning</span>&gt;<span class="hljs-selector-class">.admonition-title</span><span class="hljs-selector-pseudo">::before</span>, <span class="hljs-selector-class">.attention</span>&gt;<span class="hljs-selector-class">.admonition-title</span><span class="hljs-selector-pseudo">::before</span>, <span class="hljs-selector-class">.caution</span>&gt;<span class="hljs-selector-class">.admonition-title</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#ff9100</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;<br>&#125;<br><br><span class="hljs-selector-class">.failure</span>&gt;<span class="hljs-selector-class">.admonition-title</span><span class="hljs-selector-pseudo">::before</span>,<span class="hljs-selector-class">.missing</span>&gt;<span class="hljs-selector-class">.admonition-title</span><span class="hljs-selector-pseudo">::before</span>,<span class="hljs-selector-class">.fail</span>&gt;<span class="hljs-selector-class">.admonition-title</span><span class="hljs-selector-pseudo">::before</span>,<span class="hljs-selector-class">.error</span>&gt;<span class="hljs-selector-class">.admonition-title</span><span class="hljs-selector-pseudo">::before</span>&#123;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#ff5252</span>;;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;<br>&#125;<br><br><span class="hljs-selector-class">.admonition</span>&gt;<span class="hljs-selector-pseudo">:last-child</span> &#123;<br>  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">0</span> <span class="hljs-meta">!important</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>MIT</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://squidfunk.github.io/mkdocs-material/extensions/admonition/">Material for MkDocs</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HEXO-插件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>这他喵的疫情又开始了</title>
    <link href="/2022/02/14/%E8%BF%99%E4%BB%96%E5%96%B5%E7%9A%84%E7%96%AB%E6%83%85%E5%8F%88%E5%BC%80%E5%A7%8B%E4%BA%86/"/>
    <url>/2022/02/14/%E8%BF%99%E4%BB%96%E5%96%B5%E7%9A%84%E7%96%AB%E6%83%85%E5%8F%88%E5%BC%80%E5%A7%8B%E4%BA%86/</url>
    
    <content type="html"><![CDATA[<h1 id="苏州市疫情防控2022年第7号通告"><a href="#苏州市疫情防控2022年第7号通告" class="headerlink" title="苏州市疫情防控2022年第7号通告"></a>苏州市疫情防控2022年第7号通告</h1><blockquote><p>来源： “苏州发布”微信公众号发布日期： 2022-02-14 07:47</p></blockquote><h2 id="情况通报"><a href="#情况通报" class="headerlink" title="情况通报"></a>情况通报</h2><p>2月13日晚，我市在发热门诊就诊患者和“愿检尽检”人员中，有4人核酸检测初筛及复核结果均呈阳性。</p><p>接报后，市、区两级疫情防控应急处置机制立即启动，全面开展流行病学调查、采样检测和隔离管控，并严格落实相关场所管控及环境消杀等防疫措施。对各类相关人员排查、检测、管控及环境样本采集检测等工作均在全力进行中。</p><h2 id="现将有关事项通告如下："><a href="#现将有关事项通告如下：" class="headerlink" title="现将有关事项通告如下："></a>现将有关事项通告如下：</h2><p>一、全面加强社会面管控，取消全市各类公众聚集性活动；电影院、棋牌室、网吧、KTV、游戏厅、酒吧等密闭场所暂时关闭。市民自觉做到少出门、不串门、不扎堆、不聚集，规范佩戴口罩。</p><p>二、全市中小学校、幼儿园暂缓开学，线下培训机构一律暂停。</p><p>三、线上线下药店全面暂停“退热、止咳、抗病毒、抗菌素”等四大类疫情监测药品销售。</p><p>四、全面加强公共交通管控，轨道交通、出租车（网约车）、公交车等严格实行测温、查码和规范佩戴口罩等措施。</p><p>五、如出现发热、咳嗽等症状，在做好个人防护前提下，不乘坐公共交通工具，及时前往就近发热门诊就诊。</p><p>六、请广大市民非必要不离开苏州，尽量减少出行，提倡有条件者居家办公。主动配合单位、小区封控管理措施，加强自我防护。</p><p>请广大市民不信谣、不传谣，后续相关信息，疫情联防联控指挥部将陆续发布。</p><p>苏州市新冠肺炎疫情联防联控指挥部</p><p>2022年2月14日</p>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
      <category>疫情</category>
      
    </categories>
    
    
    <tags>
      
      <tag>疫情</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在GITHUB PAGE上部署VUEPRESS</title>
    <link href="/2022/02/13/%E5%9C%A8GITHUB-PAGE%E4%B8%8A%E9%83%A8%E7%BD%B2VUEPRESS/"/>
    <url>/2022/02/13/%E5%9C%A8GITHUB-PAGE%E4%B8%8A%E9%83%A8%E7%BD%B2VUEPRESS/</url>
    
    <content type="html"><![CDATA[<h1 id="在GITHUB-PAGE上部署VUEPRESS"><a href="#在GITHUB-PAGE上部署VUEPRESS" class="headerlink" title="在GITHUB PAGE上部署VUEPRESS"></a>在GITHUB PAGE上部署VUEPRESS</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs apl">&gt;vuepress用于迅速搭建技术文档网站与个人博客，简单快捷，<br></code></pre></td></tr></table></figure><p>有阅读障碍的同学，可以跳过第一至四节，下载我写好的<a href="https://github.com/zhangyunchencc/vuepress-devkit.git">工具包</a>:<br><code>git clone https://github.com/zhangyunchencc/vuepress-devkit.git</code><br>然后从第五节开始看。</p><h2 id="一、为什么你需要一个博客？"><a href="#一、为什么你需要一个博客？" class="headerlink" title="一、为什么你需要一个博客？"></a>一、为什么你需要一个博客？</h2><p>优秀的程序员都在写博客，写博客有很多好处：</p><ul><li>帮助自己梳理、总结、理解知识点（个人提升）</li><li>帮助别人理解知识点（好人一生平安）</li><li>简历更好看，更多面试机会（升职加薪）</li></ul><h2 id="二、什么是-VuePress"><a href="#二、什么是-VuePress" class="headerlink" title="二、什么是 VuePress"></a>二、什么是 VuePress</h2><p><strong>VuePress</strong> 是尤雨溪（vue.js 框架作者）4月12日发布的一个全新的基于 vue 的静态网站生成器，实际上就是一个 vue 的 spa 应用，内置 webpack，可以用来写文档。详见 <a href="https://vuepress.docschina.org/">VuePress中文网</a></p><p>其实类似的建站工具有很多，比如 WordPress、Jekyll、Hexo 等，其中 WordPress 需要自己购买虚拟主机，不考虑；Jekyll 是 Github-Page 默认支持的，听说操作比较复杂，没有用过不做过多评价了；Hexo 之前一直在用，但一直觉得主题不好看，风格不够简洁优雅。自从遇见 VuePress，嗯，就是它了~</p><p>VuePress 有很多优点：</p><ul><li>界面简洁优雅（个人感觉比 HEXO 好看）</li><li>容易上手（半小时能搭好整个项目）</li><li>更好的兼容、扩展 Markdown 语法</li><li>响应式布局，PC端、手机端</li><li>Google Analytics 集成</li><li>支持 PWA</li></ul><h2 id="三、开始搭建"><a href="#三、开始搭建" class="headerlink" title="三、开始搭建"></a>三、开始搭建</h2><h3 id="创建项目文件夹"><a href="#创建项目文件夹" class="headerlink" title="创建项目文件夹"></a>创建项目文件夹</h3><p>可以右键手动新建，也可以使用 mkdir 命令新建：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">mkdir vuepressBlogDemo<br></code></pre></td></tr></table></figure><h3 id="全局安装-VuePress"><a href="#全局安装-VuePress" class="headerlink" title="全局安装 VuePress"></a>全局安装 VuePress</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> -g vuepress<br></code></pre></td></tr></table></figure><h3 id="进入-vuepressBlogDemo-文件夹，初始化项目"><a href="#进入-vuepressBlogDemo-文件夹，初始化项目" class="headerlink" title="进入 vuepressBlogDemo 文件夹，初始化项目"></a>进入 vuepressBlogDemo 文件夹，初始化项目</h3><p>使用 <code>npm init</code> 或 <code>npm init -y</code>（默认yes）</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> init -y<br></code></pre></td></tr></table></figure><h3 id="创建文件夹和文件"><a href="#创建文件夹和文件" class="headerlink" title="创建文件夹和文件"></a>创建文件夹和文件</h3><p>在 vuepressBlogDemo 文件夹中创建 docs 文件夹，在 docs 中创建 .vuepress 文件夹，在.vuepress中创建 public 文件夹和 config.js 文件，最终项目结构如下所示：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vuepressBlogDemo<br>├─── docs<br>│   ├── README<span class="hljs-selector-class">.md</span><br>│   └── <span class="hljs-selector-class">.vuepress</span><br>│       ├── public<br>│       └── config<span class="hljs-selector-class">.js</span><br>└── package.json<br></code></pre></td></tr></table></figure><h3 id="在-config-js-文件中配置网站标题、描述、主题等信息"><a href="#在-config-js-文件中配置网站标题、描述、主题等信息" class="headerlink" title="在 config.js 文件中配置网站标题、描述、主题等信息"></a>在 config.js 文件中配置网站标题、描述、主题等信息</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs awk">module.exports = &#123;<br>  title: <span class="hljs-string">&#x27;Chen\&#x27;s blog&#x27;</span>,<br>  description: <span class="hljs-string">&#x27;我的个人网站&#x27;</span>,<br>  head: [ <span class="hljs-regexp">//</span> 注入到当前页面的 HTML &lt;head&gt; 中的标签<br>    [<span class="hljs-string">&#x27;link&#x27;</span>, &#123; rel: <span class="hljs-string">&#x27;icon&#x27;</span>, href: <span class="hljs-string">&#x27;/logo.jpg&#x27;</span> &#125;], <span class="hljs-regexp">//</span> 增加一个自定义的 favicon(网页标签的图标)<br>  ],<br>  base: <span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-regexp">//</span> 这是部署到github相关的配置<br>  markdown: &#123;<br>    lineNumbers: false <span class="hljs-regexp">//</span> 代码块显示行号<br>  &#125;,<br>  themeConfig: &#123;<br>    nav:[ <span class="hljs-regexp">//</span> 导航栏配置<br>      &#123;text: <span class="hljs-string">&#x27;前端基础&#x27;</span>, link: <span class="hljs-string">&#x27;/accumulate/&#x27;</span> &#125;,<br>      &#123;text: <span class="hljs-string">&#x27;算法题库&#x27;</span>, link: <span class="hljs-string">&#x27;/algorithm/&#x27;</span>&#125;,<br>      &#123;text: <span class="hljs-string">&#x27;微博&#x27;</span>, link: <span class="hljs-string">&#x27;https://baidu.com&#x27;</span>&#125;      <br>    ],<br>    sidebar: <span class="hljs-string">&#x27;auto&#x27;</span>, <span class="hljs-regexp">//</span> 侧边栏配置<br>    sidebarDepth: <span class="hljs-number">2</span>, <span class="hljs-regexp">//</span> 侧边栏显示<span class="hljs-number">2</span>级<br>  &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><h3 id="在-package-json-文件里添加两个启动命令"><a href="#在-package-json-文件里添加两个启动命令" class="headerlink" title="在 package.json 文件里添加两个启动命令"></a>在 package.json 文件里添加两个启动命令</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;scripts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;dev&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;vuepress dev docs&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;build&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;vuepress build docs&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="一切就绪-跑起来看看吧"><a href="#一切就绪-跑起来看看吧" class="headerlink" title="一切就绪 跑起来看看吧"></a>一切就绪 跑起来看看吧</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">npm <span class="hljs-built_in">run</span> dev<br></code></pre></td></tr></table></figure><h2 id="四、一些小亮点"><a href="#四、一些小亮点" class="headerlink" title="四、一些小亮点"></a>四、一些小亮点</h2><p>完成了基础搭建后，就可以在docs目录下新建 <code>.md</code> 文件写文章了（.md 是 Markdown 语法文件，你需要知道 Markdown 的一些基本写法，很简单，这里给大家一份 <a href="https://www.jianshu.com/p/b03a8d7b1719">Markdown 语法整理大集合</a>）</p><p>下面给大家安利一些实用的方法。</p><h3 id="代码块高亮"><a href="#代码块高亮" class="headerlink" title="代码块高亮"></a>代码块高亮</h3><p>在 .md 文件中书写代码时，可在 &#96;&#96;&#96; 后增加 js、html、json等格式类型，代码块即可按照指定类型高亮</p><p><img src="https://gitee.com/starfall-dust/tuchuang/raw/master/img/202108281634347.png" alt="image-20210828163434850"></p><h2 id="五、部署上线"><a href="#五、部署上线" class="headerlink" title="五、部署上线"></a>五、部署上线</h2><p>说了这么多都是在本地进行的，现在我们要把本地的内容推送到某个服务器上，这样只要有网络，就可以随时随地看自己的网站了。</p><p>一般来说，有两种方案可供选择：</p><ol><li>自己买一个服务器，阿里云、腾讯云等，这种方式的好处是速度有保证、可以被搜索引擎收录，坏处是要花钱啊 土豪同学可以考虑。</li><li>使用 <a href="https://pages.github.com/">Github Pages</a> 。什么是 Github Pages 呢？简单说就是 Github 提供的、用于搭建个人网站的静态站点托管服务。很多人用它搭建个人博客。这种方式的好处是免费、方便，坏处是速度可能会有些慢、不能被国内的搜索引擎收录。</li></ol><p>最终我选择了方案2，下面将给大家讲解如何使用 Github Pages 服务。</p><p>登陆 GitHub账号，打开 github 网站，登陆自己的 github 账号（没有账号的快去注册并面壁思过作为一个优秀的程序员为啥连一个github账号都没有）</p><p>接着我们新建两个仓库，</p><h3 id="新建仓库：-USERNAME-github-io"><a href="#新建仓库：-USERNAME-github-io" class="headerlink" title="新建仓库： USERNAME.github.io"></a>新建仓库： USERNAME.github.io</h3><blockquote><p>注意！<br>USERNAME 必须是你 Github 的账号名称，不是你的名字拼音，也不是你的非主流网名，不要瞎起，要保证和Github账号名一模一样！</p></blockquote><p>例如我的 Github 账号名称是 <code>king-zhangbn</code></p><p><img src="https://gitee.com/starfall-dust/tuchuang/raw/master/img/202108281605653.png" alt="image-20210828160534984"></p><p>那么新建仓库，Repository name 就填写为：king-zhangbn<code>.github.io</code></p><p><img src="https://gitee.com/starfall-dust/tuchuang/raw/master/img/202108281607620.png" alt="image-20210828160731272"></p><p>因为我已经搭建好了，这里会报错</p><h3 id="下载工具包"><a href="#下载工具包" class="headerlink" title="下载工具包"></a>下载工具包</h3><p>这个项目是用来开发博客的，以后只需要改这个项目就够了。</p><ul><li>使用工具包的，将 <a href="https://github.com/zhangyunchencc/vuepress-devkit.git">vuepress-devkit</a> 中的内容拷贝到 vuepressBlog 文件夹中</li><li>自己从头搭建的，将 vuepressBlogDemo 文件夹的内容拷贝到仓库二，并在根目录下创建 deploy.sh 文件，内容如下：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/usr/bin/env sh</span><br><br><span class="hljs-comment"># 确保脚本抛出遇到的错误</span><br><span class="hljs-built_in">set</span> -e<br><br><span class="hljs-comment"># 生成静态文件</span><br>npm run build<br><br><span class="hljs-comment"># 进入生成的文件夹</span><br><span class="hljs-built_in">cd</span> docs/.vuepress/dist<br><br><span class="hljs-comment"># 如果是发布到自定义域名</span><br><span class="hljs-comment"># echo &#x27;www.yourwebsite.com&#x27; &gt; CNAME</span><br><br>git init<br>git add -A<br>git commit -m <span class="hljs-string">&#x27;deploy&#x27;</span><br><br><span class="hljs-comment"># 如果你想要部署到 https://USERNAME.github.io</span><br>git push -f git@github.com:USERNAME/USERNAME.github.io.git master<br><br><span class="hljs-comment"># 如果发布到 https://USERNAME.github.io/&lt;REPO&gt;  REPO=github上的项目</span><br><span class="hljs-comment"># git push -f git@github.com:USERNAME/&lt;REPO&gt;.git master:gh-pages</span><br><br><span class="hljs-built_in">cd</span> -<br></code></pre></td></tr></table></figure><h3 id="修改仓库二中的-deploy-sh-发布脚本"><a href="#修改仓库二中的-deploy-sh-发布脚本" class="headerlink" title="修改仓库二中的 deploy.sh 发布脚本"></a>修改仓库二中的 deploy.sh 发布脚本</h3><p>把文件中的 USERNAME 改成 Github 账号名，例如我的账号名是 zhangyunchencc，那么就可以改为：</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gauss"><span class="hljs-meta"># 如果你想要部署到 https:<span class="hljs-comment">//USERNAME.github.io</span></span><br>git <span class="hljs-keyword">push</span> -f git<span class="hljs-comment">@github.com:king-zhangbn/king-zhangbn.github.io.git master</span><br></code></pre></td></tr></table></figure><p>这样仓库二和仓库一就建立了关联。</p><p>简单说二者的关系是：仓库一负责显示网站内容，我们不需要改动它；日常开发和新增内容，都在仓库二中，并通过 npm run deploy 命令，将代码发布到仓库一。</p><h3 id="在-package-json-文件夹中添加发布命令（使用工具包的请忽略）"><a href="#在-package-json-文件夹中添加发布命令（使用工具包的请忽略）" class="headerlink" title="在 package.json 文件夹中添加发布命令（使用工具包的请忽略）"></a>在 package.json 文件夹中添加发布命令（使用工具包的请忽略）</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;scripts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;deploy&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;bash deploy.sh&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="利用GIT工具部署"><a href="#利用GIT工具部署" class="headerlink" title="利用GIT工具部署"></a>利用GIT工具部署</h3><p>点击这个链接<a href="https://git-scm.com/download/win">Git - Downloading Package (git-scm.com)</a>，下载GIT。</p><p><em>下载后傻瓜式一键安装，建议安装在英文目录下</em></p><p>安装完成后在开始菜单中能够找到如下程序</p><p>或者右击桌面，能够看到如下 Git 选项</p><ul><li>GUI 为用户界面模式</li><li>Bash 为命令行模式</li></ul><h4 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h4><p>由于git是分布式管理工具，需要输入用户名和邮箱以作为标识，因此，我们按右键打开<code>Git Bash</code>命令框</p><p><img src="https://gitee.com/starfall-dust/tuchuang/raw/master/img/202108281639740.png" alt="image-20210828163925985"></p><p>在命令行输入下列的命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">git config --global user.name &quot;Your Name&quot;<br>git config --global user.email &quot;email@example.com&quot;<br></code></pre></td></tr></table></figure><p><em>name可以为中文，邮箱建议使用qq邮箱，方便记忆</em></p><h4 id="生成SSH公钥"><a href="#生成SSH公钥" class="headerlink" title="生成SSH公钥"></a>生成SSH公钥</h4><p>许多 Git 服务器都使用 SSH 公钥进行认证，所以我们也需要配置该公钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta"># </span><span class="language-bash">输入如下命令，三次回车即可生成 ssh key</span><br>ssh-keygen -t rsa -C &quot;email@example.com&quot;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/starfall-dust/tuchuang/raw/master/img/202108281644058.png" alt="image-20210828164407380"></p><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><table><thead><tr><th>命令</th><th>备注</th></tr></thead><tbody><tr><td>git status</td><td>查看仓库的改变情况，会有相关的提示操作出现</td></tr><tr><td>git add</td><td>直接添加所有改动的文件</td></tr><tr><td>git commit -m “note”</td><td>确认生成本地的版本，note是 版本特点说明</td></tr><tr><td>git push</td><td>将改动上传到github，若没有指定分支，则需要使用git push origin master</td></tr><tr><td>git log</td><td>查看版本更新情况</td></tr><tr><td>git reset -hard x</td><td>回退到某个本地版本,x为git log中出现的hash值的前七位</td></tr><tr><td>git clean -xf</td><td>清除所有的未提交文件</td></tr></tbody></table><h4 id="在GitHub上配置密钥"><a href="#在GitHub上配置密钥" class="headerlink" title="在GitHub上配置密钥"></a>在GitHub上配置密钥</h4><p>1、找到生成的SSH文件，C:\Users\<code>yourname</code>\.ssh</p><p><img src="https://gitee.com/starfall-dust/tuchuang/raw/master/img/202108281648821.png" alt="image-20210828164800167"></p><p><img src="https://gitee.com/starfall-dust/tuchuang/raw/master/img/202108281649008.png" alt="image-20210828164909466"></p><p>2、进入GitHub设置</p><p><img src="https://gitee.com/starfall-dust/tuchuang/raw/master/img/202108281657056.png" alt="image-20210828165722556"></p><p>点击 <strong>New SSH keys</strong></p><p>把刚刚文件夹里面的<code>id_rsa.pub</code>用记事本打开，复制里面的内容到New SSH keys里面</p><p><img src="https://gitee.com/starfall-dust/tuchuang/raw/master/img/202108281653592.png" alt="image-20210828165342163"></p><p><img src="https://gitee.com/starfall-dust/tuchuang/raw/master/img/202108281655924.png" alt="image-20210828165550428"></p><p>点击add，输入密码</p><p><img src="https://gitee.com/starfall-dust/tuchuang/raw/master/img/202108281656461.png" alt="image-20210828165636075"></p><h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><p>进入到你的博客文件夹</p><p><img src="https://gitee.com/starfall-dust/tuchuang/raw/master/img/202108281659792.png" alt="image-20210828165940552"></p><p>初始化仓库</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">git init<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/starfall-dust/tuchuang/raw/master/img/202108281701998.png" alt="image-20210828170129594"></p><p>执行</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">bash <span class="hljs-keyword">deploy</span>.sh<br></code></pre></td></tr></table></figure><p>完成</p>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
      <category>VuePress</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Github Pages 访问太慢？通过 Netlify 免费加速</title>
    <link href="/2022/02/13/Github%20Pages%20%E8%AE%BF%E9%97%AE%E5%A4%AA%E6%85%A2%EF%BC%9F%E9%80%9A%E8%BF%87%20Netlify%20%E5%85%8D%E8%B4%B9%E5%8A%A0%E9%80%9F/"/>
    <url>/2022/02/13/Github%20Pages%20%E8%AE%BF%E9%97%AE%E5%A4%AA%E6%85%A2%EF%BC%9F%E9%80%9A%E8%BF%87%20Netlify%20%E5%85%8D%E8%B4%B9%E5%8A%A0%E9%80%9F/</url>
    
    <content type="html"><![CDATA[<p>原文：<a href="https://www.cnblogs.com/37Y37/p/12551839.html">Github Pages 访问太慢？通过 Netlify 免费加速</a><br>Github Pages 为 Github 提供的一项静态站点托管服务，它直接从 Github 仓库获取静态文件进行发布，然后提供一个<code>github.io</code>的二级域名供用户访问，支持绑定自定义域名，支持开启 HTTPS，开启 HTTPS 会自动申请证书同时在证书过期前自动续签，这一切都是<strong>免费</strong>的，使用极其简单，只需要将你的静态文件提交到 Github，然后开启 Pages 服务即可，<a href="https://ops-coffee.cn/">我的博客</a>就托管于 Github Pages<br>Github Pages 免费且稳定的服务让我可以专注内容，而无需考虑成本及维护的问题，非常方便广受好评，但其最大的一个问题就是国内访问速度很慢，如何简单快速又低成本的解决这个问题呢？这里介绍一个服务：Netlify<br>Netlify 是一家提供静态网站托管的综合平台，支持自动从 Github 等仓库拉取代码并构建成静态网站进行发布，同时也支持自定义域名，自动申请 SSL 证书等功能，更为重要的是自动启用<strong>CDN 加速</strong>，国内访问速度要快很多<br>以下分别是 Github Pages 和 Netlify 两个平台同一项目请求速度的对比图<br>​</p><p><a href="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518223216.png#id=SZ04y&originHeight=557&originWidth=1415&originalType=binary&status=done&style=none"><img src="https://gitee.com/starfall-dust/tuchuang/raw/master/img4/202202130950889.png"></a><br>​</p><p>从上图的测试结果可以看出国内各地的访问速度 Netlify 都能完胜，接下来详细介绍下如何通过 Netlify 给你的 Github Pages 加速</p><h2 id="Netlify"><a href="#Netlify" class="headerlink" title="Netlify"></a>Netlify</h2><p>打开<a href="https://www.netlify.com/">Netlify 官网</a>，点击右上角的<code>Sign up</code>注册账号，这里推荐关联 Github 账号<br><a href="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518225800.png#id=VCCOt&originHeight=787&originWidth=1267&originalType=binary&status=done&style=none"><img src="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518225800.png#id=VCCOt&originHeight=787&originWidth=1267&originalType=binary&status=done&style=none"></a><br>关联认证后进入 Netlify 的后台页面，如下图，点击<code>New site from Git</code><br><a href="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518225812.png#id=L0w5n&originHeight=493&originWidth=1266&originalType=binary&status=done&style=none"><img src="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518225812.png#id=L0w5n&originHeight=493&originWidth=1266&originalType=binary&status=done&style=none"></a><br>选择网站源码托管的代码仓库类型，支持 Github、Gitlab 以及 Bitbucket，选择<code>GitHub</code><br><a href="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518225822.png#id=NWsJE&originHeight=703&originWidth=1267&originalType=binary&status=done&style=none"><img src="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518225822.png#id=NWsJE&originHeight=703&originWidth=1267&originalType=binary&status=done&style=none"></a><br>然后会进入 Github 的认证授权页面，点击<code>Authorize Netlify by Netlify</code><br><a href="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518225830.png#id=P8iq0&originHeight=799&originWidth=1200&originalType=binary&status=done&style=none"><img src="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518225830.png#id=P8iq0&originHeight=799&originWidth=1200&originalType=binary&status=done&style=none"></a><br>点击<code>Only select repositories</code>选择要授权的 Github 仓库，当然也可以直接选择授权所有仓库，这个授权在设置中可以改<br><a href="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518225950.png#id=FWhUF&originHeight=799&originWidth=1200&originalType=binary&status=done&style=none"><img src="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518225950.png#id=FWhUF&originHeight=799&originWidth=1200&originalType=binary&status=done&style=none"></a><br>授权完成回到 Netlify 后台页面，选择我们刚刚授权的 Github 仓库继续<br><a href="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518225955.png#id=ShjWn&originHeight=757&originWidth=1267&originalType=binary&status=done&style=none"><img src="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518225955.png#id=ShjWn&originHeight=757&originWidth=1267&originalType=binary&status=done&style=none"></a><br>选择部署的用户以及分支，如果是一些需要编译的项目，还支持定义编译的命令以及最终发布的目录，纯静态网站的话都不需要填写，直接点击<code>Deploy site</code>即可完成部署<br><a href="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518225959.png#id=qTr4o&originHeight=711&originWidth=1267&originalType=binary&status=done&style=none"><img src="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518225959.png#id=qTr4o&originHeight=711&originWidth=1267&originalType=binary&status=done&style=none"></a><br>部署完成后，Netlify 会自动生成一个随机的二级域名<code>xxx.netlify.com</code>，我们可以修改为自定义的二级域名，点击<code>Site Settings</code><br><a href="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518230005.png#id=h6nHW&originHeight=730&originWidth=1267&originalType=binary&status=done&style=none"><img src="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518230005.png#id=h6nHW&originHeight=730&originWidth=1267&originalType=binary&status=done&style=none"></a><br>General -&gt; Site details 下点击<code>Change site name</code>，可以为这个站点设置一个自定义的名字，二级域名也会相应改变<br><a href="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518230010.png#id=oDvrj&originHeight=861&originWidth=1267&originalType=binary&status=done&style=none"><img src="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518230010.png#id=oDvrj&originHeight=861&originWidth=1267&originalType=binary&status=done&style=none"></a><br>如果你想绑定自己的域名，需要先在域名管理系统里新建解析，将域名 CNAME 指向到你的 netlify 二级域名，以阿里云为例如下<br><a href="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518230116.png#id=rvt7W&originHeight=717&originWidth=1267&originalType=binary&status=done&style=none"><img src="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518230116.png#id=rvt7W&originHeight=717&originWidth=1267&originalType=binary&status=done&style=none"></a><br>然后进入 Netlify 管理后台，Domain management -&gt; Domains，点击<code>Add domain alias</code>，填入你的自定义域名<br><a href="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518230121.png#id=ut4h6&originHeight=653&originWidth=1267&originalType=binary&status=done&style=none"><img src="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518230121.png#id=ut4h6&originHeight=653&originWidth=1267&originalType=binary&status=done&style=none"></a><br>待域名解析生效后就会看到新绑定的域名变为绿色，并且设置为了主域名<a href="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518230125.png#id=oabNd&originHeight=537&originWidth=1267&originalType=binary&status=done&style=none"><img src="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518230125.png#id=oabNd&originHeight=537&originWidth=1267&originalType=binary&status=done&style=none"></a><br>最后为自定义域名开启 HTTPS 支持，Domain management -&gt; HTTPS，点击<code>Verify DNS configuration</code>，域名验证通过则会自动申请证书<br><a href="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518230130.png#id=OedgW&originHeight=711&originWidth=1267&originalType=binary&status=done&style=none"><img src="https://gitee.com/yuexiliuli/MyMarkdownImage/raw/master/img/20210518230130.png#id=OedgW&originHeight=711&originWidth=1267&originalType=binary&status=done&style=none"></a><br>至此 Netlify 与 Github 绑定完成，可以通过自定义域名访问网站了，之后你每一次提交代码到 Github，便会<strong>自动</strong>发布至 Netlify，无需额外操作，非常方便</p><h2 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明"></a>其他说明</h2><p>如果你是主域名要绑定 Netlify，且必须使用 A 记录的话，可以直接 ping 一下你的 Netlify 二级域名地址得到的 IP 便可以作为域名解析，例如我的域名是<code>ops-coffee.netlify.com</code>，ping 之后得到的地址是<code>157.230.35.153</code>，可以多 ping 几次得到不同的地址，都绑定到域名上以防止单节点故障<br>国内也有类似于 Github pages 这样的服务，例如 Gitee 和 Coding 提供的 pages 服务，在速度方面要有不少的优势，但稳定性欠佳，且可能会面临层层审查域名备案等问题<br>如果你的域名有备案，项目又是纯静态的话还可以考虑直接托管在国内的一些对象存储服务上，例如七牛云、腾讯云等，然后开启 CDN 加速，效果也不错，并且大多都有免费流量可以使用<br>Github Pages 和 Netlify 这种免费且可高度自定义的方案，在满足我们个性化需求的同时，省去了维护成本和资金压力，可以让站点活得更久，从而让我们把重点放在持续不断的输出内容，形成良性循环，赶紧试试吧</p>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HEXO</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/02/13/hello-world/"/>
    <url>/2022/02/13/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
